// This file was generated by Mendix Modeler 7.18.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_visitor.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the DesignPattern_Visitor module
	public static boolean bCo_Count(IContext context, designpattern_visitor.proxies.Count _count)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Count", _count == null ? null : _count.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DesignPattern_Visitor.BCo_Count", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_Print(IContext context, designpattern_visitor.proxies.Print _print)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Print", _print == null ? null : _print.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "DesignPattern_Visitor.BCo_Print", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static designpattern_visitor.proxies.TreeNode dS_Tree_Create(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "DesignPattern_Visitor.DS_Tree_Create", params);
			return result == null ? null : designpattern_visitor.proxies.TreeNode.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_TreeNode_Print(IContext context, designpattern_visitor.proxies.TreeNode _treeNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
			Core.execute(context, "DesignPattern_Visitor.MB_TreeNode_Print", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_TreeNodeAbel_CountHeads(IContext context, designpattern_visitor.proxies.TreeNode _treeNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
			Core.execute(context, "DesignPattern_Visitor.MB_TreeNodeAbel_CountHeads", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_TreeNodeAdam_CountHeads(IContext context, designpattern_visitor.proxies.TreeNode _treeNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
			Core.execute(context, "DesignPattern_Visitor.MB_TreeNodeAdam_CountHeads", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_TreeNodeAdam_CountPerGender(IContext context, designpattern_visitor.proxies.TreeNode _treeNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
			Core.execute(context, "DesignPattern_Visitor.MB_TreeNodeAdam_CountPerGender", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_TreeNodeKain_CountHeads(IContext context, designpattern_visitor.proxies.TreeNode _treeNode)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TreeNode", _treeNode == null ? null : _treeNode.getMendixObject());
			Core.execute(context, "DesignPattern_Visitor.MB_TreeNodeKain_CountHeads", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void treeNode_ApplyVisitor(IContext context, designpattern_visitor.proxies.TreeNode _currentNode, designpattern_visitor.proxies.Visitor _visitor)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("CurrentNode", _currentNode == null ? null : _currentNode.getMendixObject());
			params.put("Visitor", _visitor == null ? null : _visitor.getMendixObject());
			Core.execute(context, "DesignPattern_Visitor.TreeNode_ApplyVisitor", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}
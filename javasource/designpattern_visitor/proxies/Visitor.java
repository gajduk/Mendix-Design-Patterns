// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_visitor.proxies;

public class Visitor
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject visitorMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DesignPattern_Visitor.Visitor";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Visitor_TreeNode("DesignPattern_Visitor.Visitor_TreeNode");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Visitor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DesignPattern_Visitor.Visitor"));
	}

	protected Visitor(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject visitorMendixObject)
	{
		if (visitorMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DesignPattern_Visitor.Visitor", visitorMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DesignPattern_Visitor.Visitor");

		this.visitorMendixObject = visitorMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Visitor.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static designpattern_visitor.proxies.Visitor initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return designpattern_visitor.proxies.Visitor.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static designpattern_visitor.proxies.Visitor initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("DesignPattern_Visitor.Count", mendixObject.getType()))
			return designpattern_visitor.proxies.Count.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("DesignPattern_Visitor.Print", mendixObject.getType()))
			return designpattern_visitor.proxies.Print.initialize(context, mendixObject);

		return new designpattern_visitor.proxies.Visitor(context, mendixObject);
	}

	public static designpattern_visitor.proxies.Visitor load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return designpattern_visitor.proxies.Visitor.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Visitor_TreeNode
	 */
	public final designpattern_visitor.proxies.TreeNode getVisitor_TreeNode() throws com.mendix.core.CoreException
	{
		return getVisitor_TreeNode(getContext());
	}

	/**
	 * @param context
	 * @return value of Visitor_TreeNode
	 */
	public final designpattern_visitor.proxies.TreeNode getVisitor_TreeNode(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		designpattern_visitor.proxies.TreeNode result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Visitor_TreeNode.toString());
		if (identifier != null)
			result = designpattern_visitor.proxies.TreeNode.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Visitor_TreeNode
	 * @param visitor_treenode
	 */
	public final void setVisitor_TreeNode(designpattern_visitor.proxies.TreeNode visitor_treenode)
	{
		setVisitor_TreeNode(getContext(), visitor_treenode);
	}

	/**
	 * Set value of Visitor_TreeNode
	 * @param context
	 * @param visitor_treenode
	 */
	public final void setVisitor_TreeNode(com.mendix.systemwideinterfaces.core.IContext context, designpattern_visitor.proxies.TreeNode visitor_treenode)
	{
		if (visitor_treenode == null)
			getMendixObject().setValue(context, MemberNames.Visitor_TreeNode.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Visitor_TreeNode.toString(), visitor_treenode.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return visitorMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final designpattern_visitor.proxies.Visitor that = (designpattern_visitor.proxies.Visitor) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DesignPattern_Visitor.Visitor";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_visitor.proxies;

public class TreeNode
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject treeNodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DesignPattern_Visitor.TreeNode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Label("Label"),
		Gender("Gender"),
		Parent("DesignPattern_Visitor.Parent"),
		Children("DesignPattern_Visitor.Children");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TreeNode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DesignPattern_Visitor.TreeNode"));
	}

	protected TreeNode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject treeNodeMendixObject)
	{
		if (treeNodeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DesignPattern_Visitor.TreeNode", treeNodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DesignPattern_Visitor.TreeNode");

		this.treeNodeMendixObject = treeNodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TreeNode.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static designpattern_visitor.proxies.TreeNode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return designpattern_visitor.proxies.TreeNode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static designpattern_visitor.proxies.TreeNode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new designpattern_visitor.proxies.TreeNode(context, mendixObject);
	}

	public static designpattern_visitor.proxies.TreeNode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return designpattern_visitor.proxies.TreeNode.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Label
	 */
	public final java.lang.String getLabel()
	{
		return getLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of Label
	 */
	public final java.lang.String getLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Label.toString());
	}

	/**
	 * Set value of Label
	 * @param label
	 */
	public final void setLabel(java.lang.String label)
	{
		setLabel(getContext(), label);
	}

	/**
	 * Set value of Label
	 * @param context
	 * @param label
	 */
	public final void setLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String label)
	{
		getMendixObject().setValue(context, MemberNames.Label.toString(), label);
	}

	/**
	 * Set value of Gender
	 * @param gender
	 */
	public final designpattern_visitor.proxies.Enum_Gender getGender()
	{
		return getGender(getContext());
	}

	/**
	 * @param context
	 * @return value of Gender
	 */
	public final designpattern_visitor.proxies.Enum_Gender getGender(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Gender.toString());
		if (obj == null)
			return null;

		return designpattern_visitor.proxies.Enum_Gender.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Gender
	 * @param gender
	 */
	public final void setGender(designpattern_visitor.proxies.Enum_Gender gender)
	{
		setGender(getContext(), gender);
	}

	/**
	 * Set value of Gender
	 * @param context
	 * @param gender
	 */
	public final void setGender(com.mendix.systemwideinterfaces.core.IContext context, designpattern_visitor.proxies.Enum_Gender gender)
	{
		if (gender != null)
			getMendixObject().setValue(context, MemberNames.Gender.toString(), gender.toString());
		else
			getMendixObject().setValue(context, MemberNames.Gender.toString(), null);
	}

	/**
	 * @return value of Parent
	 */
	public final designpattern_visitor.proxies.TreeEdge getParent() throws com.mendix.core.CoreException
	{
		return getParent(getContext());
	}

	/**
	 * @param context
	 * @return value of Parent
	 */
	public final designpattern_visitor.proxies.TreeEdge getParent(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		designpattern_visitor.proxies.TreeEdge result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Parent.toString());
		if (identifier != null)
			result = designpattern_visitor.proxies.TreeEdge.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Parent
	 * @param parent
	 */
	public final void setParent(designpattern_visitor.proxies.TreeEdge parent)
	{
		setParent(getContext(), parent);
	}

	/**
	 * Set value of Parent
	 * @param context
	 * @param parent
	 */
	public final void setParent(com.mendix.systemwideinterfaces.core.IContext context, designpattern_visitor.proxies.TreeEdge parent)
	{
		if (parent == null)
			getMendixObject().setValue(context, MemberNames.Parent.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Parent.toString(), parent.getMendixObject().getId());
	}

	/**
	 * @return value of Children
	 */
	public final designpattern_visitor.proxies.TreeEdge getChildren() throws com.mendix.core.CoreException
	{
		return getChildren(getContext());
	}

	/**
	 * @param context
	 * @return value of Children
	 */
	public final designpattern_visitor.proxies.TreeEdge getChildren(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		designpattern_visitor.proxies.TreeEdge result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Children.toString());
		if (identifier != null)
			result = designpattern_visitor.proxies.TreeEdge.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Children
	 * @param children
	 */
	public final void setChildren(designpattern_visitor.proxies.TreeEdge children)
	{
		setChildren(getContext(), children);
	}

	/**
	 * Set value of Children
	 * @param context
	 * @param children
	 */
	public final void setChildren(com.mendix.systemwideinterfaces.core.IContext context, designpattern_visitor.proxies.TreeEdge children)
	{
		if (children == null)
			getMendixObject().setValue(context, MemberNames.Children.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Children.toString(), children.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return treeNodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final designpattern_visitor.proxies.TreeNode that = (designpattern_visitor.proxies.TreeNode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DesignPattern_Visitor.TreeNode";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_visitor.proxies;

public class Print extends designpattern_visitor.proxies.Visitor
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DesignPattern_Visitor.Print";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Res("Res"),
		Visitor_TreeNode("DesignPattern_Visitor.Visitor_TreeNode");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Print(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DesignPattern_Visitor.Print"));
	}

	protected Print(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject printMendixObject)
	{
		super(context, printMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("DesignPattern_Visitor.Print", printMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DesignPattern_Visitor.Print");
	}

	/**
	 * @deprecated Use 'Print.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static designpattern_visitor.proxies.Print initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return designpattern_visitor.proxies.Print.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static designpattern_visitor.proxies.Print initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new designpattern_visitor.proxies.Print(context, mendixObject);
	}

	public static designpattern_visitor.proxies.Print load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return designpattern_visitor.proxies.Print.initialize(context, mendixObject);
	}

	/**
	 * @return value of Res
	 */
	public final java.lang.String getRes()
	{
		return getRes(getContext());
	}

	/**
	 * @param context
	 * @return value of Res
	 */
	public final java.lang.String getRes(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Res.toString());
	}

	/**
	 * Set value of Res
	 * @param res
	 */
	public final void setRes(java.lang.String res)
	{
		setRes(getContext(), res);
	}

	/**
	 * Set value of Res
	 * @param context
	 * @param res
	 */
	public final void setRes(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String res)
	{
		getMendixObject().setValue(context, MemberNames.Res.toString(), res);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final designpattern_visitor.proxies.Print that = (designpattern_visitor.proxies.Print) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DesignPattern_Visitor.Print";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

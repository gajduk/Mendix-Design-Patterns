// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_strategy.proxies;

public class PayCalculator
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject payCalculatorMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DesignPattern_Strategy.PayCalculator";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Value("Value"),
		PayCalculatorType("PayCalculatorType"),
		PayCalculator_Project("DesignPattern_Strategy.PayCalculator_Project");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PayCalculator(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DesignPattern_Strategy.PayCalculator"));
	}

	protected PayCalculator(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject payCalculatorMendixObject)
	{
		if (payCalculatorMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DesignPattern_Strategy.PayCalculator", payCalculatorMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DesignPattern_Strategy.PayCalculator");

		this.payCalculatorMendixObject = payCalculatorMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PayCalculator.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static designpattern_strategy.proxies.PayCalculator initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return designpattern_strategy.proxies.PayCalculator.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static designpattern_strategy.proxies.PayCalculator initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("DesignPattern_Strategy.Overtime", mendixObject.getType()))
			return designpattern_strategy.proxies.Overtime.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("DesignPattern_Strategy.Standard", mendixObject.getType()))
			return designpattern_strategy.proxies.Standard.initialize(context, mendixObject);

		return new designpattern_strategy.proxies.PayCalculator(context, mendixObject);
	}

	public static designpattern_strategy.proxies.PayCalculator load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return designpattern_strategy.proxies.PayCalculator.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Value
	 */
	public final java.math.BigDecimal getValue()
	{
		return getValue(getContext());
	}

	/**
	 * @param context
	 * @return value of Value
	 */
	public final java.math.BigDecimal getValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Value.toString());
	}

	/**
	 * Set value of Value
	 * @param value
	 */
	public final void setValue(java.math.BigDecimal value)
	{
		setValue(getContext(), value);
	}

	/**
	 * Set value of Value
	 * @param context
	 * @param value
	 */
	public final void setValue(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal value)
	{
		getMendixObject().setValue(context, MemberNames.Value.toString(), value);
	}

	/**
	 * Set value of PayCalculatorType
	 * @param paycalculatortype
	 */
	public final designpattern_strategy.proxies.Enum_PayCalculatorType getPayCalculatorType()
	{
		return getPayCalculatorType(getContext());
	}

	/**
	 * @param context
	 * @return value of PayCalculatorType
	 */
	public final designpattern_strategy.proxies.Enum_PayCalculatorType getPayCalculatorType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.PayCalculatorType.toString());
		if (obj == null)
			return null;

		return designpattern_strategy.proxies.Enum_PayCalculatorType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of PayCalculatorType
	 * @param paycalculatortype
	 */
	public final void setPayCalculatorType(designpattern_strategy.proxies.Enum_PayCalculatorType paycalculatortype)
	{
		setPayCalculatorType(getContext(), paycalculatortype);
	}

	/**
	 * Set value of PayCalculatorType
	 * @param context
	 * @param paycalculatortype
	 */
	public final void setPayCalculatorType(com.mendix.systemwideinterfaces.core.IContext context, designpattern_strategy.proxies.Enum_PayCalculatorType paycalculatortype)
	{
		if (paycalculatortype != null)
			getMendixObject().setValue(context, MemberNames.PayCalculatorType.toString(), paycalculatortype.toString());
		else
			getMendixObject().setValue(context, MemberNames.PayCalculatorType.toString(), null);
	}

	/**
	 * @return value of PayCalculator_Project
	 */
	public final designpattern_strategy.proxies.Project3 getPayCalculator_Project() throws com.mendix.core.CoreException
	{
		return getPayCalculator_Project(getContext());
	}

	/**
	 * @param context
	 * @return value of PayCalculator_Project
	 */
	public final designpattern_strategy.proxies.Project3 getPayCalculator_Project(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		designpattern_strategy.proxies.Project3 result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PayCalculator_Project.toString());
		if (identifier != null)
			result = designpattern_strategy.proxies.Project3.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PayCalculator_Project
	 * @param paycalculator_project
	 */
	public final void setPayCalculator_Project(designpattern_strategy.proxies.Project3 paycalculator_project)
	{
		setPayCalculator_Project(getContext(), paycalculator_project);
	}

	/**
	 * Set value of PayCalculator_Project
	 * @param context
	 * @param paycalculator_project
	 */
	public final void setPayCalculator_Project(com.mendix.systemwideinterfaces.core.IContext context, designpattern_strategy.proxies.Project3 paycalculator_project)
	{
		if (paycalculator_project == null)
			getMendixObject().setValue(context, MemberNames.PayCalculator_Project.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PayCalculator_Project.toString(), paycalculator_project.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return payCalculatorMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final designpattern_strategy.proxies.PayCalculator that = (designpattern_strategy.proxies.PayCalculator) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DesignPattern_Strategy.PayCalculator";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

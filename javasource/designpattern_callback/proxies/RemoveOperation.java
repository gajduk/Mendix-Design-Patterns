// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_callback.proxies;

public class RemoveOperation extends designpattern_callback.proxies.PersonListOperation
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DesignPattern_Callback.RemoveOperation";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		OperationLabel("OperationLabel"),
		_NrPeople("_NrPeople"),
		PersonListOperation_Person("DesignPattern_Callback.PersonListOperation_Person"),
		PersonListOperation_Project("DesignPattern_Callback.PersonListOperation_Project");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RemoveOperation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DesignPattern_Callback.RemoveOperation"));
	}

	protected RemoveOperation(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject removeOperationMendixObject)
	{
		super(context, removeOperationMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("DesignPattern_Callback.RemoveOperation", removeOperationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DesignPattern_Callback.RemoveOperation");
	}

	/**
	 * @deprecated Use 'RemoveOperation.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static designpattern_callback.proxies.RemoveOperation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return designpattern_callback.proxies.RemoveOperation.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static designpattern_callback.proxies.RemoveOperation initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new designpattern_callback.proxies.RemoveOperation(context, mendixObject);
	}

	public static designpattern_callback.proxies.RemoveOperation load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return designpattern_callback.proxies.RemoveOperation.initialize(context, mendixObject);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final designpattern_callback.proxies.RemoveOperation that = (designpattern_callback.proxies.RemoveOperation) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DesignPattern_Callback.RemoveOperation";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

// This file was generated by Mendix Modeler 7.18.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package designpattern_callback.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the DesignPattern_Callback module
	public static void aCo_Reassign(IContext context, designpattern_callback.proxies.ReassignOperation _reassignOperation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReassignOperation", _reassignOperation == null ? null : _reassignOperation.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.ACo_Reassign", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCo_Remove(IContext context, designpattern_callback.proxies.RemoveOperation _removeOperation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RemoveOperation", _removeOperation == null ? null : _removeOperation.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.ACo_Remove", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Operation_Confirm(IContext context, designpattern_callback.proxies.PersonListOperation _personListOperation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonListOperation", _personListOperation == null ? null : _personListOperation.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.ACT_Operation_Confirm", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Project_InitialDataload(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "DesignPattern_Callback.ACT_Project_InitialDataload", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Reassign(IContext context, java.util.List<designpattern_callback.proxies.Person> _personList, designpattern_callback.proxies.Project _project)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (designpattern_callback.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			params.put("Project", _project == null ? null : _project.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.ACT_Reassign", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Reassign_ValidateAndPromptConfirmation(IContext context, designpattern_callback.proxies.ReassignOperation _reassignOperation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReassignOperation", _reassignOperation == null ? null : _reassignOperation.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.ACT_Reassign_ValidateAndPromptConfirmation", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_Remove(IContext context, java.util.List<designpattern_callback.proxies.Person> _personList, designpattern_callback.proxies.Project _project)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (designpattern_callback.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			params.put("Project", _project == null ? null : _project.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.ACT_Remove", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static designpattern_callback.proxies.Project dS_Project_GetOne(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "DesignPattern_Callback.DS_Project_GetOne", params);
			return result == null ? null : designpattern_callback.proxies.Project.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<designpattern_callback.proxies.Project> dSL_ReassignmentProject(IContext context, designpattern_callback.proxies.ReassignOperation _reassignOperation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ReassignOperation", _reassignOperation == null ? null : _reassignOperation.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "DesignPattern_Callback.DSL_ReassignmentProject", params);
			java.util.List<designpattern_callback.proxies.Project> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<designpattern_callback.proxies.Project>();
				for (IMendixObject obj : objs)
					result.add(designpattern_callback.proxies.Project.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_Operation_ShowPrompt(IContext context, designpattern_callback.proxies.PersonListOperation _personListOperation)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PersonListOperation", _personListOperation == null ? null : _personListOperation.getMendixObject());
			Core.execute(context, "DesignPattern_Callback.SUB_Operation_ShowPrompt", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}